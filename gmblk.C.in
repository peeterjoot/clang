#if 0
int myfuncEx( void ** ppBlkPtr, int line ) ;

#define myfunc( x ) myfuncEx( (x), __LINE__ )
//int myfunc( void ** ppBlkPtr ) ;
#endif

#include <stddef.h>
#define sqlzRc int
#define Uint32 unsigned
#define SQLO_MEM_POOL_HANDLE void *
#define SQLO_MEM_DEFAULT 0
#if 0
   sqlzRc sqlogmblk
   (
      SQLO_MEM_POOL_HANDLE    poolHandle,
      const size_t            size,
      Uint32                  flags,
      void **                 ppBlkPtr
   ) ;
#else
   sqlzRc sqlogmblkEx
   (
      SQLO_MEM_POOL_HANDLE    poolHandle,
      const size_t            size,
      Uint32                  flags,
      void **                 ppBlkPtr,
      int, int, int
   ) ;

   template <class T>
   inline sqlzRc sqlogmblk
   (
      SQLO_MEM_POOL_HANDLE    pPoolHdl,
      const size_t            size,
      const Uint32            flags,
      T **                    ppBlkPtr
   )
   {
      sqlzRc rc = sqlogmblkEx( pPoolHdl, size, flags, (void **)ppBlkPtr, 0, 0, 0 ) ;

      return rc ;
   }

#if 0
   template <>
   sqlzRc sqlogmblk
   (
      SQLO_MEM_POOL_HANDLE    poolHandle,
      const size_t            size,
      Uint32                  flags,
      void **                 ppBlkPtr
   ) ;
#endif
#endif

   sqlzRc sqlogblk
   (
      SQLO_MEM_POOL_HANDLE    poolHandle,
      const size_t            size,
      void **                 ppBlkPtr
   ) ;

   sqlzRc sqlogtblk
   (
      SQLO_MEM_POOL_HANDLE    poolHandle,
      const size_t            size,
      void **                 ppBlkPtr
   ) ;

#define SQLNN_CMPL_GET( size, addrPtr ) \
   sqlogmblk( 0, size, \
              0, \
              addrPtr )

#define SQLNN_APPL_GET( size, addrPtr ) \
   sqlogmblk( 0, size, \
              0, \
              addrPtr )

#define SQLNN_SQN_GET( size, addrPtr ) \
   sqlogmblk( 0, size, \
              0, \
              addrPtr )

void blah(void)
{
   int * r ;
   void * s ;
   int rc ;

  char            *localStrp = 0;
  int * replypp ;

    rc = SQLNN_CMPL_GET(10, (void **)&(localStrp));
    rc = SQLNN_APPL_GET(1, (void **)&(localStrp));
    rc = SQLNN_SQN_GET(2, (void **)&(localStrp));

   rc = sqlogmblk( 0, 1, 0, &r ) ;
   rc = sqlogmblk( 0, 1, 0, (void **)&r ) ;
   if ( sqlogmblk( 0, 1, 0, &s ) )
   {
   }

   if ( rc = sqlogblk( 0, 1, (void **)&r ) )
   {
   }

   rc = sqlogblk( 0, 1, &s ) ;

   if ( rc = sqlogtblk( 0, 1, (void **)&r ) )
   {
   }
    rc = sqlogblk(     0 , 10  , (void **)replypp);

   rc = sqlogtblk( 0, 1, &s ) ;
}
